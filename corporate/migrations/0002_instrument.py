# Generated by Django 5.1.5 on 2025-02-03 10:37

import django.core.validators
import django_ckeditor_5.fields
import sorl.thumbnail.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('corporate', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified at')),
                ('title', models.CharField(db_comment='Stores the unique title of the instance.', help_text='Enter a unique title.', max_length=255, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(allow_unicode=True, db_comment='Stores the URL-friendly slug derived from the title.', help_text='URL-friendly slug from the title.', max_length=255, unique=True, verbose_name='Slug')),
                ('alternate_text', models.CharField(blank=True, help_text='Write about picture for SEO', max_length=110, null=True, validators=[django.core.validators.MaxLengthValidator(150), django.core.validators.MinLengthValidator(3)], verbose_name='Picture Alternate Text')),
                ('width_field', models.PositiveSmallIntegerField(blank=True, editable=False, help_text="size of picture's Width", null=True, verbose_name='Picture Width')),
                ('height_field', models.PositiveSmallIntegerField(blank=True, editable=False, help_text="size of picture's Height", null=True, verbose_name='Picture Height')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(db_comment='Stores the detailed description of the instrument.', help_text='Provide a detailed description of the musical instrument, including features and specifications.', verbose_name='Description')),
                ('image', sorl.thumbnail.fields.ImageField(db_comment='Image representing the musical instrument.', help_text='Upload an image of the musical instrument.', upload_to='music/instruments/', verbose_name='Instrument Image')),
                ('instructors', models.ManyToManyField(db_comment="Many-to-many relationship with users who belong to the 'Instructor' group.", help_text='Select users who are instructors and associated with this instrument.', limit_choices_to={'groups__name': 'Instructor'}, related_name='musical_instruments', to=settings.AUTH_USER_MODEL, verbose_name='Instructors')),
            ],
            options={
                'verbose_name': 'Instrument',
                'verbose_name_plural': 'Instruments',
                'db_table': 'musical_instruments',
                'db_table_comment': 'Table storing different types of musical instruments.',
            },
        ),
    ]
